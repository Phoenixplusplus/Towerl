public class TierData
{

    // TIER DATA
    // 24 ints - 0 = gap, 1 = Plain platform, 2 = hazard
    // ordered in "difficulty rating"
    // TOP (element [0]) = Bottom / Home Tier
    // SECOND (element [1]) = DEFAULT TOP TIER (usually at -7.5 rotation)
    // N.B. First Segement has to be a Vanilla Platform ,i.e. 1 - else you will break stuff laterz
private int[,] data = {
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
{1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
{1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0},
{1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,1,2,1,0,0,0,0,0},
{1,1,1,0,0,0,0,0,1,2,1,0,0,0,0,0,1,2,1,0,0,0,0,0},
{1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0},
{1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0},
{1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0},
{1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,2,1,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0},
{1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,2,2,1,0,0,0,0},
{1,1,1,0,0,0,1,2,1,0,0,0,1,1,1,0,0,0,1,2,1,0,0,0},
{1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,2,2,0,0,0,0,0,0},
{1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0},
{1,1,1,2,0,0,0,0,1,1,1,2,0,0,0,0,1,1,1,2,0,0,0,0},
{1,1,1,2,1,1,0,0,0,0,0,0,1,2,2,1,1,1,0,0,0,0,0,0},
{1,1,2,1,1,1,0,0,0,0,0,0,1,1,2,2,1,1,0,0,0,0,0,0},
{1,2,1,1,1,1,0,0,0,0,0,0,1,1,1,2,2,1,0,0,0,0,0,0},
{1,1,2,2,0,0,0,0,1,1,1,1,0,0,0,0,1,2,1,1,0,0,0,0},
{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
{1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0},
{1,1,1,1,1,1,2,0,0,0,0,0,1,1,1,1,1,1,2,0,0,0,0,0},
{1,1,2,0,0,0,1,1,2,0,0,0,1,1,2,0,0,0,1,1,2,0,0,0},
{1,1,1,1,1,1,0,0,0,0,0,2,1,1,1,1,1,1,0,0,0,0,0,2},
{1,1,0,0,0,2,1,1,0,0,0,2,1,1,0,0,0,2,1,1,0,0,0,2},
{1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,0,1,1,2,2,1,1,1,0,0,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,0,1,1,2,2,1,1,1,0,0,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,2,2,1,1,0,0,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,2,2,1,0,0,0,0,0},
{1,1,1,2,2,1,0,0,0,0,0,0,2,2,1,1,1,1,0,0,0,0,0,0},
{1,2,1,1,0,0,0,0,1,2,2,1,0,0,0,0,1,1,2,1,0,0,0,0},
{1,1,1,0,0,0,0,2,1,1,1,2,0,0,0,2,1,1,1,0,0,0,0,2},
{1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,1,2,2,1,0,0,0},
{1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,2,1,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0},
{1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0},
{1,1,1,1,1,1,1,2,0,0,0,0,1,1,1,1,1,1,1,2,0,0,0,0},
{1,1,1,1,2,0,0,0,1,1,1,1,2,0,0,0,1,1,1,1,2,0,0,0},
{1,1,1,1,1,1,1,0,0,0,0,2,1,1,1,1,1,1,1,0,0,0,0,2},
{1,1,1,1,0,0,0,2,1,1,1,1,0,0,0,2,1,1,1,1,0,0,0,2},
{1,1,1,1,1,1,1,1,0,0,0,0,2,1,1,1,1,1,1,2,0,0,0,0},
{1,2,1,1,2,1,1,0,0,0,0,0,1,1,2,1,2,1,1,0,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0},
{1,1,2,2,2,1,1,0,0,0,0,0,1,2,2,1,1,1,1,0,0,0,0,0},
{1,1,1,1,0,0,1,1,1,1,0,0,1,2,2,1,0,0,1,1,2,1,0,0},
{1,1,1,1,0,0,1,2,2,1,0,0,1,1,1,1,0,0,1,2,1,1,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,0},
{1,1,1,1,1,1,1,1,2,0,0,0,1,1,1,1,1,1,1,1,2,0,0,0},
{1,1,1,2,0,0,1,1,1,2,0,0,1,1,1,2,0,0,1,1,1,2,0,0},
{1,1,1,1,1,1,2,0,0,0,0,2,1,1,1,1,1,1,2,0,0,0,0,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2},
{1,1,1,1,1,1,1,1,0,0,0,2,1,1,1,1,1,1,1,1,0,0,0,2},
{1,1,1,0,0,2,1,1,1,0,0,2,1,1,1,0,0,2,1,1,1,0,0,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0},
{1,1,1,1,1,2,0,0,1,1,1,1,1,2,0,0,1,1,1,1,1,2,0,0},
{1,1,1,2,0,0,0,2,1,1,1,2,0,0,0,2,1,1,1,2,0,0,0,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2},
{1,1,1,1,1,0,0,2,1,1,1,1,1,0,0,2,1,1,1,1,1,0,0,2},
{1,1,1,1,2,1,1,1,1,2,1,1,1,1,2,1,1,1,0,0,0,0,0,0},
{1,1,1,1,2,2,1,1,1,1,1,2,1,1,1,1,1,1,0,0,0,0,0,0},
{1,1,2,1,1,2,1,1,0,0,0,0,2,2,2,1,1,1,1,1,0,0,0,0},
{1,2,2,1,1,0,0,0,1,2,2,1,1,0,0,0,2,2,1,1,1,0,0,0},
{1,1,1,2,2,0,0,0,2,1,1,1,2,0,0,0,1,1,1,2,2,0,0,0},
{1,1,1,1,1,1,0,0,1,1,1,1,2,1,0,0,1,1,1,1,2,2,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0},
{1,1,1,1,1,1,1,1,1,2,0,0,1,1,1,1,1,1,1,1,1,2,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,0,2},
{1,1,1,1,1,1,1,2,0,0,0,2,1,1,1,1,1,1,1,2,0,0,0,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,2},
{1,1,1,1,1,1,1,1,1,0,0,2,1,1,1,1,1,1,1,1,1,0,0,2},
{1,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,0,0,0,0,0,0},
{1,1,1,2,2,1,1,1,0,0,0,0,1,1,2,1,1,2,2,2,0,0,0,0},
{1,1,2,1,1,2,2,1,0,0,0,0,1,1,1,2,2,2,1,1,0,0,0,0},
{1,1,1,1,2,1,0,0,1,2,1,1,1,1,0,0,2,2,1,1,1,1,0,0},
{1,1,1,2,1,1,0,0,1,1,2,1,1,1,0,0,1,1,2,2,1,1,0,0},
{1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,2,0,0,0,0,0},
{1,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,2,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,0,2},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2},
{1,2,2,1,1,1,0,0,1,1,1,2,1,1,0,0,1,1,1,2,2,1,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,0,2},
{1,1,1,1,1,1,1,1,2,0,0,2,1,1,1,1,1,1,1,1,2,0,0,2},
{1,1,1,1,2,0,0,2,1,1,1,1,2,0,0,2,1,1,1,1,2,0,0,2},
{1,1,2,0,0,2,1,1,2,0,0,2,1,1,2,0,0,2,1,1,2,0,0,2},
{1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,0,0,0,0,0},
{1,1,1,2,2,2,1,1,1,0,0,0,1,1,2,1,1,2,2,1,1,0,0,0},
{1,1,2,1,1,2,2,1,1,0,0,0,1,1,1,1,2,2,2,1,1,0,0,0},
{1,1,1,1,2,2,1,1,1,1,2,2,1,1,1,1,1,2,2,0,0,0,0,0},
{1,1,2,1,1,1,2,1,1,1,0,0,1,1,1,1,1,2,2,2,1,1,0,0},
{1,1,2,2,1,1,2,2,1,0,0,0,1,1,2,2,2,1,1,1,1,0,0,0},
{1,1,1,1,2,2,1,1,1,1,2,2,1,1,1,1,2,2,1,1,0,0,0,0},
{1,1,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,0,0,0,0},
{1,1,1,1,2,2,2,2,1,1,1,1,1,1,2,2,1,1,2,0,0,0,0,0},
{1,1,2,2,1,1,1,2,1,1,0,0,2,2,1,1,1,2,1,1,1,1,0,0},
{1,1,1,2,2,2,1,1,1,1,0,0,1,1,1,2,2,2,1,1,1,1,0,0},
{1,2,2,1,1,1,1,2,2,2,1,1,1,1,1,1,2,2,2,0,0,0,0,0},
{1,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,2,1,1,1,2,2,0,0},
{1,1,2,2,2,1,1,1,2,2,2,1,1,1,2,2,1,1,1,0,0,0,0,0},
{1,1,1,2,2,2,1,1,1,1,0,0,1,1,2,2,1,1,2,2,1,1,0,0},
{1,1,1,1,1,1,1,2,2,2,0,0,1,1,2,2,1,1,2,2,1,1,0,0},
{1,1,1,2,2,2,1,1,1,0,0,0,2,2,2,1,1,1,2,2,2,0,0,0},
{1,1,2,2,2,2,2,1,1,1,1,1,1,1,2,2,1,1,1,1,1,0,0,0},
{1,1,1,1,2,2,2,2,1,1,1,1,1,2,2,2,2,1,1,1,0,0,0,0},
{1,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,2,2,0,0,0,0},
{1,2,2,1,1,1,1,2,2,1,1,1,1,2,1,1,1,1,2,2,1,1,0,0},
{1,1,1,2,2,2,1,1,1,2,2,2,1,1,1,2,2,2,1,1,1,1,0,0},
{1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,2,2,1,1,0,0},
{1,1,1,1,2,2,2,1,1,1,2,2,2,2,1,1,1,1,2,2,2,2,0,0}
    };

    // Level data ... 66 ints in 33x Tier Number, Rotation pairs
    // These are stored in "reverse" order (depending how you look at it)
    // first pair is Level 1, i.e. immediately above the bottom "home" tier, etc
    // PURELY PLACEHOLDERS ... will be overwritten when we have "difficulty grading" up and running
private int[,] LevelData  = {
{83,12,33,323,61,219,98,264,39,322,30,47,76,215,47,170,53,247,83,253,18,22,6,113,55,119,20,360,74,120,91,88,52,307,13,355,53,189,39,51,19,296,106,129,39,202,51,219,79,215,59,334,30,72,12,169,8,300,57,177,18,269,44,98,31,92},
{51,255,15,77,24,42,18,7,51,192,87,172,110,58,30,185,55,296,111,268,53,236,42,242,34,351,80,89,36,322,78,24,79,200,46,123,38,205,43,292,50,265,82,24,42,231,49,279,59,330,84,156,114,261,70,8,113,101,59,346,104,255,51,123,96,66},
{55,172,50,44,72,66,28,227,81,40,51,185,21,270,112,307,74,67,20,75,36,167,38,4,65,360,67,297,58,125,78,109,63,275,29,213,30,339,74,133,51,118,64,134,20,254,104,270,31,341,60,42,92,135,35,271,22,205,84,23,21,220,25,50,103,312},
{84,24,90,55,12,243,26,188,109,300,8,230,63,181,46,133,97,180,19,334,115,162,85,160,8,58,25,296,115,109,67,305,31,138,36,359,11,360,50,297,99,308,2,4,44,57,33,360,11,28,93,9,58,1,15,132,25,35,110,262,83,264,47,36,11,192},
{38,209,1,74,55,144,71,114,77,201,53,66,37,32,86,131,104,74,84,75,19,101,62,103,72,324,39,174,88,112,18,266,16,112,66,294,31,11,56,104,95,151,109,143,14,117,100,129,98,82,31,174,7,247,23,94,76,328,89,149,107,219,67,69,88,41},
{48,93,84,114,89,260,21,329,28,238,5,62,88,263,91,56,68,9,52,265,1,113,37,60,50,225,34,112,64,63,18,24,111,239,36,231,71,142,90,276,115,34,89,209,87,281,102,328,97,137,111,309,103,330,56,139,90,82,76,259,29,235,25,53,35,358},
{46,164,7,245,47,46,101,13,48,175,113,306,1,9,51,280,59,324,69,307,98,17,103,313,4,286,102,84,7,63,42,2,113,309,4,0,57,134,96,304,65,181,98,170,50,85,64,77,16,164,78,344,13,98,56,44,21,300,61,360,27,37,110,333,29,79},
{12,233,19,46,25,331,34,58,20,195,48,360,102,4,46,208,106,301,63,52,55,212,18,60,68,171,6,227,25,199,112,166,99,281,115,324,110,188,85,315,40,95,20,93,100,211,42,214,66,189,43,199,77,137,64,28,32,358,107,297,46,20,9,244,102,235},
{1,71,70,109,6,71,94,138,65,305,57,225,25,307,1,29,94,216,27,313,59,12,13,217,1,174,111,282,39,291,108,124,111,228,9,124,48,320,46,90,76,263,113,54,93,98,115,250,16,308,68,278,59,194,26,70,10,50,62,30,44,237,78,331,88,228},
{55,181,13,147,88,117,72,54,24,233,106,148,112,332,95,185,89,136,51,100,95,80,106,159,72,123,20,241,88,191,13,119,12,223,47,152,52,73,50,172,6,194,52,87,39,80,103,108,5,280,94,30,50,271,45,118,95,195,46,94,42,205,97,278,13,88},
{50,252,113,355,44,161,37,15,100,348,114,52,109,256,102,224,38,168,47,264,4,350,22,339,72,350,97,263,105,200,108,191,59,75,101,286,50,152,21,245,67,132,55,337,68,194,10,53,61,19,105,21,104,313,43,57,85,33,67,340,65,50,35,226,89,312},
{104,304,57,109,74,207,18,238,37,233,80,3,60,308,81,169,5,185,24,66,95,134,78,287,82,204,36,316,45,246,83,91,101,50,35,92,112,123,55,174,27,235,13,21,68,122,38,81,98,199,36,96,80,108,71,88,107,74,13,354,52,194,91,72,41,245},
{18,331,101,221,101,229,106,18,74,30,27,183,49,277,58,13,37,15,19,18,27,78,26,347,38,242,2,89,5,332,33,236,73,299,97,29,21,6,86,96,24,280,102,262,41,283,87,316,7,93,82,0,56,137,113,175,102,334,48,90,3,13,59,270,94,33},
{42,75,88,44,77,268,25,310,46,93,40,147,49,218,24,52,101,181,6,197,54,53,35,196,7,100,65,59,111,223,27,1,30,183,4,347,18,51,5,181,81,89,57,201,100,40,7,115,77,347,93,3,18,267,32,174,5,160,90,213,20,75,107,280,29,246},
{91,96,31,194,11,326,46,262,20,351,107,31,1,219,30,291,29,30,38,311,106,154,8,16,96,93,98,326,105,291,30,301,106,161,105,44,110,167,93,105,85,63,22,323,79,158,7,120,111,23,58,105,104,220,37,295,104,238,14,29,2,306,81,55,77,194},
{18,161,115,352,15,330,49,208,81,335,70,210,44,87,67,160,10,79,42,14,95,329,73,139,67,340,69,18,93,230,8,291,48,42,31,283,29,175,30,292,93,233,31,148,8,99,41,201,52,136,110,133,114,167,64,115,29,153,108,72,37,151,8,242,98,277},
{23,201,76,171,63,219,20,58,13,45,46,328,107,4,76,70,111,22,36,345,31,234,98,204,15,244,92,54,38,80,42,339,13,89,13,1,101,62,36,199,20,129,19,123,94,176,86,168,72,113,9,24,70,211,55,15,102,277,65,61,55,261,91,347,65,97},
{68,336,2,105,42,28,63,355,32,239,99,81,115,48,52,294,28,228,28,35,74,173,75,199,103,81,3,260,52,303,96,325,22,148,58,22,52,162,79,9,59,259,62,155,60,303,9,15,71,186,109,148,3,92,75,158,6,27,52,168,2,195,108,331,46,129},
{70,241,99,279,94,60,103,249,24,134,1,18,21,24,32,59,105,167,73,248,106,35,44,45,87,187,41,226,48,106,87,24,9,358,80,338,113,271,60,213,12,61,20,42,89,159,49,179,105,275,108,347,78,334,30,193,14,1,63,51,15,264,44,113,86,128},
{49,275,33,1,15,22,85,360,46,119,1,82,23,357,79,37,109,170,52,270,20,148,105,38,100,152,50,319,27,212,6,275,109,220,79,72,24,65,46,231,72,304,90,48,88,70,95,314,15,217,24,172,90,27,59,187,48,62,86,308,17,201,28,258,6,22},
{94,49,1,42,83,301,113,299,10,276,106,345,58,85,26,273,64,243,95,226,1,148,112,147,27,166,19,176,79,25,115,315,113,18,57,236,79,121,87,289,74,171,88,124,47,100,52,126,30,14,49,329,65,264,7,262,54,196,43,238,55,13,99,177,10,90},
{30,230,35,151,54,40,3,46,62,245,60,292,22,336,101,224,60,244,17,147,96,112,51,154,13,268,42,73,98,267,112,112,93,231,94,39,75,296,9,117,55,22,42,98,82,0,17,68,13,115,72,173,10,266,100,348,91,35,38,197,8,360,55,200,3,40},
{56,142,95,117,7,188,60,286,69,10,115,304,96,323,17,173,64,236,9,233,16,137,104,310,5,174,105,105,74,166,21,206,115,326,74,112,110,343,13,4,110,85,54,32,69,342,57,63,29,290,85,349,92,327,26,81,87,158,90,251,95,73,72,275,82,332},
{32,270,34,290,39,256,53,204,77,352,47,222,87,181,48,120,108,24,48,97,31,303,49,48,13,313,31,328,103,28,49,57,77,22,7,8,26,1,47,236,80,220,4,211,7,355,18,48,63,171,80,61,28,128,105,17,37,93,3,12,103,180,88,293,102,315},
{107,46,115,353,4,50,114,344,28,226,43,125,96,68,32,108,15,164,55,46,31,333,19,231,93,152,94,94,21,183,46,356,48,77,54,22,20,70,35,66,79,112,76,33,19,237,67,86,28,73,5,217,68,139,41,228,11,80,85,168,4,179,79,58,2,66},
{74,59,85,46,42,72,93,97,47,80,39,329,33,263,110,306,28,168,12,215,20,224,65,316,22,62,50,214,80,218,3,157,20,334,40,277,22,225,59,167,54,307,7,79,18,288,16,188,103,231,62,265,15,342,47,114,17,61,45,212,31,113,74,279,38,269},
{52,206,18,295,91,322,29,135,82,80,7,79,41,247,5,53,12,298,47,59,106,307,82,10,47,326,112,190,97,181,80,38,65,174,23,337,41,238,93,182,61,29,5,311,5,8,106,248,59,287,73,135,31,252,50,280,47,102,106,40,33,100,81,243,114,68},
{49,203,41,92,97,248,8,36,77,238,103,170,35,113,39,136,102,79,1,92,84,123,16,269,36,262,37,204,16,18,47,233,87,124,75,125,38,183,23,25,36,227,40,314,37,246,72,109,112,224,10,329,72,145,90,225,22,19,31,123,70,310,6,8,88,79},
{82,7,67,255,107,270,81,123,36,70,105,29,100,17,46,96,52,104,12,240,26,146,93,165,31,182,75,148,36,57,102,259,41,312,90,64,80,165,31,187,19,340,100,103,35,208,112,226,78,187,77,64,1,153,72,228,45,179,83,134,58,59,42,295,22,358},
{15,1,114,78,107,74,22,61,57,197,5,81,75,103,44,115,7,263,83,268,38,133,58,112,40,198,111,312,59,241,70,334,21,113,77,334,41,109,107,35,31,256,34,190,12,280,1,239,89,303,14,5,82,30,22,227,82,300,14,175,15,42,16,332,37,106}
 };

    // used by the LevelBuilder to get the tier data (and subsequently make the tier and populate IT's Tier Data field)
    public int[] GetTierData(int number)
    {
        int[] ret = new int[24];
        for (int i = 0; i < 24; i++)
        {
            ret[i] = data[number, i];
        }
        return ret;
    }

    // Used by LevelManager to get the game data for the 30 "Story" Levels
    // N.B. accepts 1-30 (only) else will return Level 1 by default
    public int[] GetLevelData(int number)
    {
        int[] ret = new int[66];
        if (number < 1 || number > 30)
        {
            number = 1;
        }
        for (int i = 0; i < 66; i++)
        {
            ret[i] = LevelData[number - 1, i];
        }
        return ret;
    }

    // Used by LevelBuilder to determine the number of Tiers recorded in here (so we can scale up without breaking stuff)
    public int GetPossibleTierCount ()
    {
        return data.GetLength(0);
    }

}
